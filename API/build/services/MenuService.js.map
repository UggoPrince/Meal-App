{"version":3,"sources":["../../server/services/MenuService.js"],"names":["MenuService","menu","map","data","menus","Menu","id","meals","caterer_id","created_at","length","getAllMenus","catererID","date","totalMenus","i","m","push"],"mappings":";;;;;;;AAGA;;;;;;;;;;IAEMA,W;;;AACJ,yBAAc;AAAA;;AACZ,SAAKC,IAAL,GAAY,EAAZ;AACD;;;;kCAEa;AACZ,aAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,UAACC,IAAD,EAAU;AAC7B,YAAMC,KAAK,GAAG,IAAIC,aAAJ,EAAd;AACAD,QAAAA,KAAK,CAACE,EAAN,GAAWH,IAAI,CAACG,EAAhB;AACAF,QAAAA,KAAK,CAACG,KAAN,GAAcJ,IAAI,CAACI,KAAnB;AACAH,QAAAA,KAAK,CAACI,UAAN,GAAmBL,IAAI,CAACK,UAAxB;AACAJ,QAAAA,KAAK,CAACK,UAAN,GAAmBN,IAAI,CAACM,UAAxB;AACA,eAAOL,KAAP;AACD,OAPM,CAAP;AAQD;;;gCAEW;AACV,UAAI,KAAKH,IAAL,CAAUS,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD;;;0BAEK;AACJ,aAAO,KAAKC,WAAL,EAAP;AACD;;;wBAEGJ,K,EAAOK,S,EAAWC,I,EAAM;AAC1B,UAAMC,UAAU,GAAG,KAAKb,IAAL,CAAUS,MAA7B;AACA,UAAMJ,EAAE,GAAGQ,UAAU,GAAG,CAAxB;;AACA,UAAIA,UAAU,GAAG,CAAjB,EAAoB;AAClB,YAAMC,CAAC,GAAGD,UAAV;AACA,aAAKb,IAAL,CAAUc,CAAV,IAAe;AACbT,UAAAA,EAAE,EAAFA,EADa;AAEbC,UAAAA,KAAK,EAALA,KAFa;AAGbC,UAAAA,UAAU,EAAEI,SAHC;AAIbH,UAAAA,UAAU,EAAEI;AAJC,SAAf;AAMD,OARD,MAQO;AACL,YAAMT,KAAK,GAAG,KAAKO,WAAL,EAAd;;AACA,aAAK,IAAII,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGX,KAAK,CAACM,MAA1B,EAAkCK,EAAC,IAAI,CAAvC,EAA0C;AACxC,cAAIX,KAAK,CAACW,EAAD,CAAL,CAASP,UAAT,KAAwBI,SAA5B,EAAuC;AACrC,gBAAMI,EAAC,GAAG;AACRV,cAAAA,EAAE,EAAFA,EADQ;AAERC,cAAAA,KAAK,EAALA,KAFQ;AAGRC,cAAAA,UAAU,EAAEI,SAHJ;AAIRH,cAAAA,UAAU,EAAEI;AAJJ,aAAV;AAMA,iBAAKZ,IAAL,CAAUc,EAAV,IAAeC,EAAf;AACA,mBAAO,KAAKL,WAAL,GAAmBL,EAAE,GAAG,CAAxB,CAAP;AACD;AACF;;AACD,YAAMU,CAAC,GAAG;AACRV,UAAAA,EAAE,EAAFA,EADQ;AAERC,UAAAA,KAAK,EAALA,KAFQ;AAGRC,UAAAA,UAAU,EAAEI,SAHJ;AAIRH,UAAAA,UAAU,EAAEI;AAJJ,SAAV;AAMA,aAAKZ,IAAL,CAAUgB,IAAV,CAAeD,CAAf;AACD;;AACD,aAAO,KAAKL,WAAL,GAAmBL,EAAE,GAAG,CAAxB,CAAP,CAjC0B,CAiCS;AACpC;;;;;;eAGYN,W","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-console */\r\n\r\nimport Menu from '../models/Menu';\r\n\r\nclass MenuService {\r\n  constructor() {\r\n    this.menu = [];\r\n  }\r\n\r\n  getAllMenus() {\r\n    return this.menu.map((data) => {\r\n      const menus = new Menu();\r\n      menus.id = data.id;\r\n      menus.meals = data.meals;\r\n      menus.caterer_id = data.caterer_id;\r\n      menus.created_at = data.created_at;\r\n      return menus;\r\n    });\r\n  }\r\n\r\n  menuExist() {\r\n    if (this.menu.length === 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  get() {\r\n    return this.getAllMenus();\r\n  }\r\n\r\n  add(meals, catererID, date) {\r\n    const totalMenus = this.menu.length;\r\n    const id = totalMenus + 1;\r\n    if (totalMenus < 1) {\r\n      const i = totalMenus;\r\n      this.menu[i] = {\r\n        id,\r\n        meals,\r\n        caterer_id: catererID,\r\n        created_at: date,\r\n      };\r\n    } else {\r\n      const menus = this.getAllMenus();\r\n      for (let i = 0; i < menus.length; i += 1) {\r\n        if (menus[i].caterer_id === catererID) {\r\n          const m = {\r\n            id,\r\n            meals,\r\n            caterer_id: catererID,\r\n            created_at: date,\r\n          };\r\n          this.menu[i] = m;\r\n          return this.getAllMenus()[id - 1];\r\n        }\r\n      }\r\n      const m = {\r\n        id,\r\n        meals,\r\n        caterer_id: catererID,\r\n        created_at: date,\r\n      };\r\n      this.menu.push(m);\r\n    }\r\n    return this.getAllMenus()[id - 1]; // -1 because it's an array\r\n  }\r\n}\r\n\r\nexport default MenuService;\r\n"],"file":"MenuService.js"}