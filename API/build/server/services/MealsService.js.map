{"version":3,"sources":["../../../server/services/MealsService.js"],"names":["MealService","meals","findAndCountAll","result","mealId","where","id","mealData","create","update","returning","destroy","m"],"mappings":";;;;;;;AACA;;;;;;;;;;;;IAEMA,W;;;AACJ,yBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAaA,YAAb;AACD;;;;;;;;;;;;;;;uBAIwB,KAAKA,KAAL,CAAWC,eAAX,E;;;AAAfC,gBAAAA,M;iDACCA,M;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMOC,M;;;;;;;;uBAEO,KAAKH,KAAL,CAAWC,eAAX,CAA2B;AAC9CG,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,EAAE,EAAEF;AAAN;AADuC,iBAA3B,C;;;AAAfD,gBAAAA,M;kDAGCA,M;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMDI,Q;;;;;;;;uBAEe,KAAKN,KAAL,CAAWO,MAAX,CAAkBD,QAAlB,C;;;AAAfJ,gBAAAA,M;kDACCA,M;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMEI,Q,EAAUH,M;;;;;;;;uBAEE,KAAKH,KAAL,CAAWQ,MAAX,CACnBF,QADmB,EACT;AAAEG,kBAAAA,SAAS,EAAE,IAAb;AAAmBL,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,EAAE,EAAEF;AAAN;AAA1B,iBADS,C;;;AAAfD,gBAAAA,M;kDAGCA,M;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMEC,M;;;;;;;;uBAEO,KAAKH,KAAL,CAAWU,OAAX,CAAmB;AACjCN,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,EAAE,EAAEF;AAAN;AAD0B,iBAAnB,C;;;AAAVQ,gBAAAA,C;kDAGCA,C;;;;;;;;;;;;;;;;;;;;;;;;;;eAOE,IAAIZ,WAAJ,E","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport { meals } from '../models/index';\r\n\r\nclass MealService {\r\n  constructor() {\r\n    this.meals = meals;\r\n  }\r\n\r\n  async getAllMeals() {\r\n    try {\r\n      const result = await this.meals.findAndCountAll();\r\n      return result;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getMealById(mealId) {\r\n    try {\r\n      const result = await this.meals.findAndCountAll({\r\n        where: { id: mealId },\r\n      });\r\n      return result;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async add(mealData) {\r\n    try {\r\n      const result = await this.meals.create(mealData);\r\n      return result;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async modify(mealData, mealId) {\r\n    try {\r\n      const result = await this.meals.update(\r\n        mealData, { returning: true, where: { id: mealId } },\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async delete(mealId) {\r\n    try {\r\n      const m = await this.meals.destroy({\r\n        where: { id: mealId },\r\n      });\r\n      return m;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new MealService();\r\n"],"file":"MealsService.js"}
