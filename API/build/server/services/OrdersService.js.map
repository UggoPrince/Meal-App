{"version":3,"sources":["../../../server/services/OrdersService.js"],"names":["OrdersService","orders","map","data","order","Orders","id","meal_id","customer_id","caterer_id","created_at","orderID","length","i","exist","index","mealID","custID","catID","date","totalOrders","orderId","orderIndex","created_id","push","getAllOrders","mealId"],"mappings":";;;;;;;AAGA;;;;;;;;;;IAEMA,a;;;AACJ,2BAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACD;;;;mCAEc;AACb,aAAO,KAAKA,MAAL,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAU;AAC/B,YAAMC,KAAK,GAAG,IAAIC,eAAJ,EAAd;AACAD,QAAAA,KAAK,CAACE,EAAN,GAAWH,IAAI,CAACG,EAAhB;AACAF,QAAAA,KAAK,CAACG,OAAN,GAAgBJ,IAAI,CAACI,OAArB;AACAH,QAAAA,KAAK,CAACI,WAAN,GAAoBL,IAAI,CAACK,WAAzB;AACAJ,QAAAA,KAAK,CAACK,UAAN,GAAmBN,IAAI,CAACM,UAAxB;AACAL,QAAAA,KAAK,CAACM,UAAN,GAAmBP,IAAI,CAACO,UAAxB;AACA,eAAON,KAAP;AACD,OARM,CAAP;AASD;;;iCAEYO,O,EAAS;AACpB,UAAI,KAAKV,MAAL,CAAYW,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,MAAL,CAAYW,MAAhC,EAAwCC,CAAC,IAAI,CAA7C,EAAgD;AAC9C,cAAI,KAAKZ,MAAL,CAAYY,CAAZ,EAAeP,EAAf,KAAsBK,OAA1B,EAAmC,OAAO;AAAEG,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,KAAK,EAAEF;AAAtB,WAAP;AACpC;;AACD,eAAO;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAP;AACD;;AACD,aAAO;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAP;AACD;;;kCAEa;AACZ,aAAO,KAAKb,MAAL,CAAYW,MAAnB;AACD;;;wBAEGI,M,EAAQC,M,EAAQC,K,EAAOC,I,EAAM;AAC/B,UAAMC,WAAW,GAAG,KAAKnB,MAAL,CAAYW,MAAhC;AACA,UAAMS,OAAO,GAAGD,WAAW,GAAG,CAA9B;AACA,UAAME,UAAU,GAAGD,OAAO,GAAG,CAA7B;AACA,UAAMjB,KAAK,GAAG;AACZE,QAAAA,EAAE,EAAEe,OADQ;AAEZd,QAAAA,OAAO,EAAES,MAFG;AAGZR,QAAAA,WAAW,EAAES,MAHD;AAIZR,QAAAA,UAAU,EAAES,KAJA;AAKZK,QAAAA,UAAU,EAAEJ;AALA,OAAd;AAOA,WAAKlB,MAAL,CAAYuB,IAAZ,CAAiBpB,KAAjB;AACA,aAAO,KAAKqB,YAAL,GAAoBH,UAApB,CAAP;AACD;;;2BAEMP,K,EAAOW,M,EAAQ;AACpB,WAAKzB,MAAL,CAAYc,KAAZ,EAAmBR,OAAnB,GAA6BmB,MAA7B;AACA,aAAO,KAAKD,YAAL,GAAoBV,KAApB,CAAP;AACD;;;;;;eAGYf,a","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-console */\r\n\r\nimport Orders from '../models/Orders';\r\n\r\nclass OrdersService {\r\n  constructor() {\r\n    this.orders = [];\r\n  }\r\n\r\n  getAllOrders() {\r\n    return this.orders.map((data) => {\r\n      const order = new Orders();\r\n      order.id = data.id;\r\n      order.meal_id = data.meal_id;\r\n      order.customer_id = data.customer_id;\r\n      order.caterer_id = data.caterer_id;\r\n      order.created_at = data.created_at;\r\n      return order;\r\n    });\r\n  }\r\n\r\n  orderIdExist(orderID) {\r\n    if (this.orders.length !== 0) {\r\n      for (let i = 0; i < this.orders.length; i += 1) {\r\n        if (this.orders[i].id === orderID) return { exist: true, index: i };\r\n      }\r\n      return { exist: false };\r\n    }\r\n    return { exist: false };\r\n  }\r\n\r\n  totalOrders() {\r\n    return this.orders.length;\r\n  }\r\n\r\n  add(mealID, custID, catID, date) {\r\n    const totalOrders = this.orders.length;\r\n    const orderId = totalOrders + 1;\r\n    const orderIndex = orderId - 1;\r\n    const order = {\r\n      id: orderId,\r\n      meal_id: mealID,\r\n      customer_id: custID,\r\n      caterer_id: catID,\r\n      created_id: date,\r\n    };\r\n    this.orders.push(order);\r\n    return this.getAllOrders()[orderIndex];\r\n  }\r\n\r\n  modify(index, mealId) {\r\n    this.orders[index].meal_id = mealId;\r\n    return this.getAllOrders()[index];\r\n  }\r\n}\r\n\r\nexport default OrdersService;\r\n"],"file":"OrdersService.js"}