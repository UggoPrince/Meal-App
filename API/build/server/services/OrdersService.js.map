{"version":3,"sources":["../../../server/services/OrdersService.js"],"names":["OrdersService","orders","findAndCountAll","result","orderId","where","id","count","orderData","create","mealsService","getMealById","mealId","meal","caterersService","getCatererById","catererId","caterer","order","newMealId","ordID","update","returning"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;;;;;;;;;;;IAEMA,a;;;AACJ,2BAAc;AAAA;;AACZ,SAAKC,MAAL,GAAcA,aAAd;AACD;;;;;;;;;;;;;;;uBAIwB,KAAKA,MAAL,CAAYC,eAAZ,E;;;AAAfC,gBAAAA,M;iDACCA,M;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMQC,O;;;;;;;;uBAEM,KAAKH,MAAL,CAAYC,eAAZ,CAA4B;AAC/CG,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,EAAE,EAAEF;AAAN;AADwC,iBAA5B,C;;;AAAfD,gBAAAA,M;kDAGCA,MAAM,CAACI,K;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMRC,S;;;;;;;;uBAEe,KAAKP,MAAL,CAAYQ,MAAZ,CAAmBD,SAAnB,C;;;AAAfL,gBAAAA,M;;uBACaO,sBAAaC,WAAb,CAAyBR,MAAM,CAACS,MAAhC,C;;;AAAbC,gBAAAA,I;;uBACgBC,yBAAgBC,cAAhB,CAA+BZ,MAAM,CAACa,SAAtC,C;;;AAAhBC,gBAAAA,O;kDACC,CAAC;AAAEC,kBAAAA,KAAK,EAAEf;AAAT,iBAAD,EAAoB;AAAEU,kBAAAA,IAAI,EAAJA;AAAF,iBAApB,EAA8B;AAAEI,kBAAAA,OAAO,EAAPA;AAAF,iBAA9B,C;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMEE,S,EAAWC,K;;;;;;;;uBAEC,KAAKnB,MAAL,CAAYoB,MAAZ,CACnB;AAAET,kBAAAA,MAAM,EAAEO;AAAV,iBADmB,EAEnB;AAAEG,kBAAAA,SAAS,EAAE,IAAb;AAAmBjB,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,EAAE,EAAEc;AAAN;AAA1B,iBAFmB,C;;;AAAfjB,gBAAAA,M;kDAICA,M;;;;;;;;;;;;;;;;;;;;;;;;;;eAOE,IAAIH,aAAJ,E","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport { orders } from '../models/index';\r\nimport mealsService from './MealsService';\r\nimport caterersService from './CaterersService';\r\n\r\nclass OrdersService {\r\n  constructor() {\r\n    this.orders = orders;\r\n  }\r\n\r\n  async getAllOrders() {\r\n    try {\r\n      const result = await this.orders.findAndCountAll();\r\n      return result;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async orderIdExist(orderId) {\r\n    try {\r\n      const result = await this.orders.findAndCountAll({\r\n        where: { id: orderId },\r\n      });\r\n      return result.count;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async add(orderData) {\r\n    try {\r\n      const result = await this.orders.create(orderData);\r\n      const meal = await mealsService.getMealById(result.mealId);\r\n      const caterer = await caterersService.getCatererById(result.catererId);\r\n      return [{ order: result }, { meal }, { caterer }];\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async modify(newMealId, ordID) {\r\n    try {\r\n      const result = await this.orders.update(\r\n        { mealId: newMealId },\r\n        { returning: true, where: { id: ordID } },\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new OrdersService();\r\n"],"file":"OrdersService.js"}