{"version":3,"sources":["../../../server/validation/OrdersValidation.js"],"names":["OrdersValidtion","error","mealId","customerId","catererId","invalid","orderId"],"mappings":";;;;;;;AACA;;;;;;;;IAEqBA,e;;;AACnB,6BAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,KAAb;AACD;;;;qCAEgBC,M,EAAQC,U,EAAYC,S,EAAW;AAC9C,UAAMC,OAAO,GAAG,EAAhB;;AACA,UAAI,CAACH,MAAD,IAAW,CAACC,UAAZ,IAA0B,CAACC,SAA/B,EAA0C;AACxC,aAAKH,KAAL,GAAa,IAAb;AACAI,QAAAA,OAAO,CAACH,MAAR,GAAiB,yBAAjB;AACAG,QAAAA,OAAO,CAACF,UAAR,GAAqB,8BAArB;AACAE,QAAAA,OAAO,CAACD,SAAR,GAAoB,4BAApB;AACD,OALD,MAKO;AACL,YAAI,CAACF,MAAL,EAAa;AACX,eAAKD,KAAL,GAAa,IAAb;AACAI,UAAAA,OAAO,CAACH,MAAR,GAAiB,yBAAjB;AACD;;AACD,YAAI,CAACC,UAAL,EAAiB;AACf,eAAKF,KAAL,GAAa,IAAb;AACAI,UAAAA,OAAO,CAACF,UAAR,GAAqB,6BAArB;AACD;;AACD,YAAI,CAACC,SAAL,EAAgB;AACd,eAAKH,KAAL,GAAa,IAAb;AACAI,UAAAA,OAAO,CAACD,SAAR,GAAoB,4BAApB;AACD;AACF;;AAED,UAAI,CAAC,yBAAQF,MAAR,CAAL,EAAsB;AACpB,aAAKD,KAAL,GAAa,IAAb;AACAI,QAAAA,OAAO,CAACH,MAAR,GAAiB,iBAAjB;AACD;;AACD,UAAI,CAAC,yBAAQC,UAAR,CAAL,EAA0B;AACxB,aAAKF,KAAL,GAAa,IAAb;AACAI,QAAAA,OAAO,CAACF,UAAR,GAAqB,qBAArB;AACD;;AACD,UAAI,CAAC,yBAAQC,SAAR,CAAL,EAAyB;AACvB,aAAKH,KAAL,GAAa,IAAb;AACAI,QAAAA,OAAO,CAACD,SAAR,GAAoB,oBAApB;AACD;;AACD,aAAO;AAAEH,QAAAA,KAAK,EAAE,KAAKA,KAAd;AAAqBI,QAAAA,OAAO,EAAPA;AAArB,OAAP;AACD;;;wCAEmBH,M,EAAQI,O,EAAS;AACnC,UAAMD,OAAO,GAAG,EAAhB;;AACA,UAAI,CAAC,yBAAQC,OAAR,CAAL,EAAuB;AACrB,aAAKL,KAAL,GAAa,IAAb;AACAI,QAAAA,OAAO,CAACH,MAAR,GAAiB,kBAAjB;AACD;;AACD,UAAI,CAACA,MAAL,EAAa;AACX,aAAKD,KAAL,GAAa,IAAb;AACAI,QAAAA,OAAO,CAACH,MAAR,GAAiB,yBAAjB;AACD;;AACD,UAAI,CAAC,yBAAQA,MAAR,CAAL,EAAsB;AACpB,aAAKD,KAAL,GAAa,IAAb;AACAI,QAAAA,OAAO,CAACH,MAAR,GAAiB,iBAAjB;AACD;;AACD,aAAO;AAAED,QAAAA,KAAK,EAAE,KAAKA,KAAd;AAAqBI,QAAAA,OAAO,EAAPA;AAArB,OAAP;AACD","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport { validID } from './allHelpers';\r\n\r\nexport default class OrdersValidtion {\r\n  constructor() {\r\n    this.error = false;\r\n  }\r\n\r\n  validateAddOrder(mealId, customerId, catererId) {\r\n    const invalid = {};\r\n    if (!mealId && !customerId && !catererId) {\r\n      this.error = true;\r\n      invalid.mealId = 'The mealId is required.';\r\n      invalid.customerId = 'Your customerId is reqiured.';\r\n      invalid.catererId = 'The catererId is required.';\r\n    } else {\r\n      if (!mealId) {\r\n        this.error = true;\r\n        invalid.mealId = 'The mealId is required.';\r\n      }\r\n      if (!customerId) {\r\n        this.error = true;\r\n        invalid.customerId = 'The customerId is required.';\r\n      }\r\n      if (!catererId) {\r\n        this.error = true;\r\n        invalid.catererId = 'The catererId is required.';\r\n      }\r\n    }\r\n\r\n    if (!validID(mealId)) {\r\n      this.error = true;\r\n      invalid.mealId = 'Invalid mealId.';\r\n    }\r\n    if (!validID(customerId)) {\r\n      this.error = true;\r\n      invalid.customerId = 'Invalid customerId.';\r\n    }\r\n    if (!validID(catererId)) {\r\n      this.error = true;\r\n      invalid.catererId = 'Invalid catererId.';\r\n    }\r\n    return { error: this.error, invalid };\r\n  }\r\n\r\n  validateModifyOrder(mealId, orderId) {\r\n    const invalid = {};\r\n    if (!validID(orderId)) {\r\n      this.error = true;\r\n      invalid.mealId = 'Invalid orderId.';\r\n    }\r\n    if (!mealId) {\r\n      this.error = true;\r\n      invalid.mealId = 'The mealId is required.';\r\n    }\r\n    if (!validID(mealId)) {\r\n      this.error = true;\r\n      invalid.mealId = 'Invalid mealId.';\r\n    }\r\n    return { error: this.error, invalid };\r\n  }\r\n}\r\n"],"file":"OrdersValidation.js"}