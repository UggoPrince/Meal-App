{"version":3,"sources":["../../../server/helpers/allHelpers.js"],"names":["validID","id","Number","isNaN","Math","sign","canModifyMeal","name","price","ntrue","ptrue","undefined","length","menuOptionValid","mealNum","mNum","i","m","parseInt","message","error"],"mappings":";;;;;;;AAAA;AACA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AACtB,MAAIA,EAAE,KAAK,CAAX,EAAc;AACZ,WAAO,KAAP;AACD;;AACD,MAAIC,MAAM,CAACC,KAAP,CAAaF,EAAb,CAAJ,EAAsB;AACpB,WAAO,KAAP;AACD;;AACD,MAAIG,IAAI,CAACC,IAAL,CAAUJ,EAAV,MAAkB,CAAC,CAAvB,EAA0B;AACxB,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAXD;;AAaA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACrC,MAAIC,KAAK,GAAG,KAAZ;AACA,MAAIC,KAAK,GAAG,KAAZ;;AACA,MAAIH,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,KAAgB,CAA1C,EAA6C;AAC3CH,IAAAA,KAAK,GAAG,IAAR;AACD;;AACD,MAAID,KAAK,KAAKG,SAAV,IAAuBH,KAAK,CAACI,MAAN,KAAiB,CAA5C,EAA+C;AAC7CF,IAAAA,KAAK,GAAG,IAAR;AACD;;AAED,MAAID,KAAK,IAAIC,KAAb,EAAoB;AAClB,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAdD;;AAgBA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAa;AACnC,MAAMC,IAAI,GAAGD,OAAO,CAACF,MAArB;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAApB,EAA0BC,CAAC,IAAI,CAA/B,EAAkC;AAChC,QAAMC,CAAC,GAAGC,QAAQ,CAACJ,OAAO,CAACE,CAAD,CAAR,EAAa,EAAb,CAAlB;;AACA,QAAI,CAAChB,OAAO,CAACiB,CAAD,CAAZ,EAAiB;AACf,aAAO;AAAEE,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAEN,OAAO,CAACE,CAAD;AAAlC,OAAP;AACD;AACF;;AACD,SAAO;AAAEG,IAAAA,OAAO,EAAE;AAAX,GAAP;AACD,CATD;;eAWe;AAAEnB,EAAAA,OAAO,EAAPA,OAAF;AAAWM,EAAAA,aAAa,EAAbA,aAAX;AAA0BO,EAAAA,eAAe,EAAfA;AAA1B,C","sourcesContent":["/* eslint-disable linebreak-style */\r\nconst validID = (id) => {\r\n  if (id === 0) {\r\n    return false;\r\n  }\r\n  if (Number.isNaN(id)) {\r\n    return false;\r\n  }\r\n  if (Math.sign(id) === -1) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst canModifyMeal = (name, price) => {\r\n  let ntrue = false;\r\n  let ptrue = false;\r\n  if (name === undefined || name.length === 0) {\r\n    ntrue = true;\r\n  }\r\n  if (price === undefined || price.length === 0) {\r\n    ptrue = true;\r\n  }\r\n\r\n  if (ntrue && ptrue) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst menuOptionValid = (mealNum) => {\r\n  const mNum = mealNum.length;\r\n  for (let i = 0; i < mNum; i += 1) {\r\n    const m = parseInt(mealNum[i], 10);\r\n    if (!validID(m)) {\r\n      return { message: 'error', error: mealNum[i] };\r\n    }\r\n  }\r\n  return { message: 'success' };\r\n};\r\n\r\nexport default { validID, canModifyMeal, menuOptionValid };\r\n"],"file":"allHelpers.js"}