{"version":3,"sources":["../../../server/controllers/MenuController.js"],"names":["MenuController","req","res","meals","body","mealId","mealNO","errMes","i","length","mealsService","getMealById","mealExist","count","push","status","send","menuService","add","addedMenu","errors","err","name","original","detail","getAllMenus","menu"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;IAEMA,c;;;;;;;;;;;;+CACUC,G,EAAKC,G;;;;;;AACXC,gBAAAA,K,GAAQF,GAAG,CAACG,IAAJ,CAASC,M;AAEnBC,gBAAAA,M,GAAS,K;AACPC,gBAAAA,M,GAAS,E;;qBACXJ,K;;;;;AACOK,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,GAAGL,KAAK,CAACM,M;;;;;;uBAEAC,sBAAaC,WAAb,CAAyBR,KAAK,CAACK,CAAD,CAA9B,C;;;AAAlBI,gBAAAA,S;;AACN,oBAAIA,SAAS,CAACC,KAAV,KAAoB,CAAxB,EAA2B;AACzBP,kBAAAA,MAAM,GAAG,IAAT;AACAC,kBAAAA,MAAM,CAACO,IAAP,mBAAuBX,KAAK,CAACK,CAAD,CAA5B;AACD;;;AAN+BA,gBAAAA,CAAC,IAAI,C;;;;;qBAUrCF,M;;;;;AAAQJ,gBAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,MAArB;;;;;;uBAEcU,qBAAYC,GAAZ,CAAgBjB,GAAG,CAACG,IAApB,C;;;AAAlBe,gBAAAA,S;;AAEN,oBAAIA,SAAS,CAACC,MAAd,EAAsB;AACdC,kBAAAA,GADc,GACR,yBAAgBF,SAAS,CAACC,MAA1B,CADQ;AAEpBlB,kBAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACD,iBAHD,MAGO,IAAIF,SAAS,CAACG,IAAV,KAAmB,wBAAvB,EAAiD;AACtDpB,kBAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CAAC,uBAAD,CAArB;AACD,iBAFM,MAEA,IAAIG,SAAS,CAACG,IAAV,KAAmB,oCAAvB,EAA6D;AAClEpB,kBAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CAACG,SAAS,CAACI,QAAV,CAAmBC,MAApB,CAArB;AACD,iBAFM,MAEA;AACLtB,kBAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,SAArB;AACD;;;;;;;;;;;;;;;;;;;;;gDAISlB,G,EAAKC,G;;;;;;;uBACEe,qBAAYQ,WAAZ,E;;;AAAbC,gBAAAA,I;;AACN,oBAAIA,IAAI,CAACb,KAAL,KAAe,CAAnB,EAAsB;AACpBX,kBAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CAAC,6BAAD,CAArB;AACD,iBAFD,MAEO;AACLd,kBAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,IAArB;AACD;;;;;;;;;;;;;;;;;;;;;eAIU,IAAI1B,cAAJ,E","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable class-methods-use-this */\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport 'babel-polyfill';\r\nimport menuService from '../services/MenuService';\r\nimport mealsService from '../services/MealsService';\r\nimport getErrorMessage from '../helpers/allHelpers';\r\n\r\nclass MenuController {\r\n  async addMenu(req, res) {\r\n    const meals = req.body.mealId;\r\n\r\n    let mealNO = false;\r\n    const errMes = [];\r\n    if (meals) {\r\n      for (let i = 0; i < meals.length; i += 1) {\r\n      // eslint-disable-next-line no-await-in-loop\r\n        const mealExist = await mealsService.getMealById(meals[i]);\r\n        if (mealExist.count === 0) {\r\n          mealNO = true;\r\n          errMes.push(`meal id ${meals[i]} is invalid.`);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (mealNO) res.status(404).send(errMes);\r\n    else {\r\n      const addedMenu = await menuService.add(req.body);\r\n\r\n      if (addedMenu.errors) {\r\n        const err = getErrorMessage(addedMenu.errors);\r\n        res.status(400).send(err);\r\n      } else if (addedMenu.name === 'SequelizeDatabaseError') {\r\n        res.status(400).send(['A meal id is invalid.']);\r\n      } else if (addedMenu.name === 'SequelizeForeignKeyConstraintError') {\r\n        res.status(400).send([addedMenu.original.detail]);\r\n      } else {\r\n        res.status(201).send(addedMenu);\r\n      }\r\n    }\r\n  }\r\n\r\n  async getMenu(req, res) {\r\n    const menu = await menuService.getAllMenus();\r\n    if (menu.count === 0) {\r\n      res.status(200).send(['No menu available. Add one.']);\r\n    } else {\r\n      res.status(200).send(menu);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new MenuController();\r\n"],"file":"MenuController.js"}