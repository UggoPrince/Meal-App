{"version":3,"sources":["../../../server/controllers/OrdersController.js"],"names":["ordersService","OrdersService","OrdersController","req","res","body","mealId","customerId","catererId","ordersValidation","OrdersValidation","validReqData","validateAddOrder","error","addedOrder","add","Date","now","status","send","message","order","invalid","mealID","orderId","params","id","validateModifyOrder","orderIdExist","parseInt","exist","modifiedOrder","modify","index","totalOrders","fields","allOrders","getAllOrders","orders"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-console */\r\n\r\nimport OrdersService from '../services/OrdersService';\r\nimport OrdersValidation from '../validation/OrdersValidation';\r\n\r\nconst ordersService = new OrdersService();\r\n\r\nclass OrdersController {\r\n  addOrder(req, res) {\r\n    const { mealId, customerId, catererId } = req.body;\r\n    const ordersValidation = new OrdersValidation();\r\n    const validReqData = ordersValidation.validateAddOrder(mealId, customerId, catererId);\r\n    if (!validReqData.error) {\r\n      const addedOrder = ordersService.add(mealId, customerId, catererId, Date.now());\r\n      res.status(201).send({ message: 'success', order: addedOrder });\r\n    } else {\r\n      res.status(404).send({ message: 'error', error: validReqData.invalid });\r\n    }\r\n  }\r\n\r\n  modifyOrder(req, res) {\r\n    const mealID = req.body.mealId;\r\n    const orderId = req.params.id;\r\n    const ordersValidation = new OrdersValidation();\r\n    const validReqData = ordersValidation.validateModifyOrder(mealID, orderId);\r\n\r\n    if (!validReqData.error) {\r\n      const orderIdExist = ordersService.orderIdExist(parseInt(orderId, 10));\r\n      if (orderIdExist.exist) {\r\n        const modifiedOrder = ordersService.modify(orderIdExist.index, mealID);\r\n        res.status(201).send({ message: 'success', order: modifiedOrder });\r\n      } else {\r\n        res.status(404).send({ message: 'error', error: `No order with the id [${orderId}]` });\r\n      }\r\n    } else {\r\n      res.status(404).send({ message: 'error', error: validReqData.invalid });\r\n    }\r\n  }\r\n\r\n  getOrders(req, res) {\r\n    const totalOrders = ordersService.totalOrders();\r\n    if (totalOrders < 1) {\r\n      res.status(200).send({\r\n        message: 'success',\r\n        error: 'No orders available. You can make one with the field below.',\r\n        fields: 'mealId',\r\n      });\r\n    } else {\r\n      const allOrders = ordersService.getAllOrders();\r\n      res.status(200).send({ message: 'success', orders: allOrders });\r\n    }\r\n  }\r\n}\r\n\r\nexport default new OrdersController();\r\n"],"file":"OrdersController.js"}