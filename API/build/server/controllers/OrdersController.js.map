{"version":3,"sources":["../../../server/controllers/OrdersController.js"],"names":["OrdersController","req","res","sentToken","get","JWT","verifyToken","jwt","tokenExp","decode","role","mealID","body","mealId","mealsService","getMealById","meal","count","name","status","send","catId","rows","catererId","reqBody","customerId","data","id","ordersService","add","addedOrder","orderID","params","modify","modOrder","getAllOrders","allOrders"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable class-methods-use-this */\r\nimport ordersService from '../services/OrdersService';\r\nimport mealsService from '../services/MealsService';\r\nimport JWT from '../helpers/JWT';\r\n\r\nclass OrdersController {\r\n  async addOrder(req, res) {\r\n    const sentToken = req.get('Authorization');\r\n    if (sentToken) {\r\n      const jwt = await JWT.verifyToken(sentToken);\r\n      if (!jwt.tokenExp && jwt.decode.role === 'customer') {\r\n        const mealID = req.body.mealId;\r\n        const meal = await mealsService.getMealById(mealID);\r\n        if (meal.count === 0 || meal.name === 'SequelizeDatabaseError') {\r\n          res.status(404).send([`No meal with mealId ${mealID}.`]);\r\n        } else {\r\n          const catId = meal.rows[0].catererId;\r\n          const reqBody = {\r\n            mealId: mealID,\r\n            catererId: catId,\r\n            customerId: jwt.decode.data.id,\r\n          };\r\n          const addedOrder = await ordersService.add(reqBody);\r\n          res.status(201).send(addedOrder);\r\n        }\r\n      } else {\r\n        res.status(401).send(['Session expired. Login as a Customer to make an orders.']);\r\n      }\r\n    } else {\r\n      res.status(401).send(['No Authorization header sent. Login as a Customer and send a token.']);\r\n    }\r\n  }\r\n\r\n  async modifyOrder(req, res) {\r\n    const sentToken = req.get('Authorization');\r\n    if (sentToken) {\r\n      const jwt = await JWT.verifyToken(sentToken);\r\n      if (!jwt.tokenExp && jwt.decode.role === 'customer') {\r\n        const orderID = req.params.id;\r\n        const mealID = req.body.mealId;\r\n        const modOrder = await ordersService.modify(orderID, mealID, jwt.decode.data.id);\r\n        if (modOrder[0] === 0) {\r\n          res.status(404).send(['Invalid orderId.']);\r\n        } else if (modOrder.name === 'SequelizeDatabaseError') {\r\n          res.status(404).send(['Invalid mealId/orderId.']);\r\n        } else {\r\n          res.status(200).send(modOrder);\r\n        }\r\n      } else {\r\n        res.status(401).send(['Session expired. Login as a Customer to modify your orders.']);\r\n      }\r\n    } else {\r\n      res.status(401).send(['No Authorization header sent. Login as a Customer and send a token.']);\r\n    }\r\n  }\r\n\r\n  async getOrders(req, res) {\r\n    const sentToken = req.get('Authorization');\r\n    if (sentToken) {\r\n      const jwt = await JWT.verifyToken(sentToken);\r\n      if (!jwt.tokenExp && jwt.decode.role === 'caterer') {\r\n        const allOrders = await ordersService.getAllOrders(jwt.decode.data.id);\r\n        if (allOrders.count === 0) {\r\n          res.status(200).send(['Your Customers have made no order(s).']);\r\n        } else {\r\n          res.status(200).send(allOrders);\r\n        }\r\n      } else {\r\n        res.status(401).send(['Session expired. Login as a Caterer to view orders.']);\r\n      }\r\n    } else {\r\n      res.status(401).send(['No Authorization header sent. Login as a Caterer and send a token.']);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new OrdersController();\r\n"],"file":"OrdersController.js"}