{"version":3,"sources":["../../../server/models/Meals.js"],"names":["Meals","meal","sequelize","define","id","type","dataType","INTEGER","primaryKey","autoIncrement","name","STRING","allowNull","validate","notEmpty","msg","size","price","isNumeric","args","currency","isAlpha","arg","model","belongsTo","foreignKey"],"mappings":";;;;;;;AACA;;;;;;;;IAEMA,K;;;AACJ,mBAAc;AAAA;;AACZ,SAAKC,IAAL,GAAYC,sBAAUC,MAAV,CAAiB,MAAjB,EAAyB;AACnCC,MAAAA,EAAE,EAAE;AACFC,QAAAA,IAAI,EAAEC,qBAASC,OADb;AAEFC,QAAAA,UAAU,EAAE,IAFV;AAGFC,QAAAA,aAAa,EAAE;AAHb,OAD+B;AAMnCC,MAAAA,IAAI,EAAE;AACJL,QAAAA,IAAI,EAAEC,qBAASK,MADX;AAEJC,QAAAA,SAAS,EAAE,KAFP;AAGJC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAE;AAAP;AADF;AAHN,OAN6B;AAanCC,MAAAA,IAAI,EAAE;AACJX,QAAAA,IAAI,EAAEC,qBAASK,MADX;AAEJC,QAAAA,SAAS,EAAE,KAFP;AAGJC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAE;AAAP;AADF;AAHN,OAb6B;AAoBnCE,MAAAA,KAAK,EAAE;AACLZ,QAAAA,IAAI,EAAEC,qBAASC,OADV;AAELK,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,QAAQ,EAAE;AACRK,UAAAA,SAAS,EAAE;AACTC,YAAAA,IAAI,EAAE,IADG;AAETJ,YAAAA,GAAG,EAAE;AAFI,WADH;AAKRD,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAE;AAAP;AALF;AAHL,OApB4B;AA+BnCK,MAAAA,QAAQ,EAAE;AACRf,QAAAA,IAAI,EAAEC,qBAASK,MADP;AAERC,QAAAA,SAAS,EAAE,KAFH;AAGRC,QAAAA,QAAQ,EAAE;AACRQ,UAAAA,OAAO,EAAE;AACPC,YAAAA,GAAG,EAAE,IADE;AAEPP,YAAAA,GAAG,EAAE;AAFE,WADD;AAKRD,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAE;AAAP;AALF;AAHF;AA/ByB,KAAzB,CAAZ;AA2CD;;;;8BAES;AACR,aAAO,KAAKd,IAAZ;AACD;;;2CAEsBsB,K,EAAO;AAC5B,WAAKtB,IAAL,CAAUuB,SAAV,CAAoBD,KAApB,EAA2B;AAAEE,QAAAA,UAAU,EAAE;AAAEb,UAAAA,SAAS,EAAE;AAAb;AAAd,OAA3B;AACD;;;;;;eAGY,IAAIZ,KAAJ,E","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport { sequelize, dataType } from './Sequelizer';\r\n\r\nclass Meals {\r\n  constructor() {\r\n    this.meal = sequelize.define('meal', {\r\n      id: {\r\n        type: dataType.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true,\r\n      },\r\n      name: {\r\n        type: dataType.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n          notEmpty: { msg: 'name is required.' },\r\n        },\r\n      },\r\n      size: {\r\n        type: dataType.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n          notEmpty: { msg: 'size is required.' },\r\n        },\r\n      },\r\n      price: {\r\n        type: dataType.INTEGER,\r\n        allowNull: false,\r\n        validate: {\r\n          isNumeric: {\r\n            args: true,\r\n            msg: 'price must be numeric',\r\n          },\r\n          notEmpty: { msg: 'price is required.' },\r\n        },\r\n      },\r\n      currency: {\r\n        type: dataType.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n          isAlpha: {\r\n            arg: true,\r\n            msg: 'currency must be letters.',\r\n          },\r\n          notEmpty: { msg: 'currency is required.' },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  getMeal() {\r\n    return this.meal;\r\n  }\r\n\r\n  associationWithCaterer(model) {\r\n    this.meal.belongsTo(model, { foreignKey: { allowNull: false } });\r\n  }\r\n}\r\n\r\nexport default new Meals();\r\n"],"file":"Meals.js"}